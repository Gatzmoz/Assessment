openapi: 3.0.3
info:
  title: 'API Documentation Mini Project IMTEK PPLK 24'
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
paths:
  /api/v1/login:
    post:
      summary: Login
      operationId: login
      description: "Supaya dapat menggunakan endpoint lainnya, pengguna wajib login.\nJika pengguna login sebanyak 3 kali maka akan cooldown selama 1 menit."
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  user:
                    name: 'Test User'
                    email: test@example.com
                  access_token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vbG9jYWxob3N0OjgwMDAvYXBpL3YxL2xvZ2luIiwiaWF0IjoxNzE5NTU3NjEyLCJleHAiOjE3MTk1NjEyMTIsIm5iZiI6MTcxOTU1NzYxMiwianRpIjoiRURmc1ZnUThvMTFSWGdLNyIsInN1YiI6IjEiLCJwcnYiOiIyM2JkNWM4OTQ5ZjYwMGFkYjM5ZTcwMWM0MDA4NzJkYjdhNTk3NmY3In0.b_F6Wuuo_l0a18mMoHjs5AwmJ0weXeyuNP-oKMQjbbA
                properties:
                  user:
                    type: object
                    properties:
                      name:
                        type: string
                        example: 'Test User'
                      email:
                        type: string
                        example: test@example.com
                  access_token:
                    type: string
                    example: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vbG9jYWxob3N0OjgwMDAvYXBpL3YxL2xvZ2luIiwiaWF0IjoxNzE5NTU3NjEyLCJleHAiOjE3MTk1NjEyMTIsIm5iZiI6MTcxOTU1NzYxMiwianRpIjoiRURmc1ZnUThvMTFSWGdLNyIsInN1YiI6IjEiLCJwcnYiOiIyM2JkNWM4OTQ5ZjYwMGFkYjM5ZTcwMWM0MDA4NzJkYjdhNTk3NmY3In0.b_F6Wuuo_l0a18mMoHjs5AwmJ0weXeyuNP-oKMQjbbA
        401:
          description: 'Invalid email or password'
          content:
            application/json:
              schema:
                type: object
                example:
                  status: fail
                  message: 'Invalid credentials'
                  data: []
                properties:
                  status:
                    type: string
                    example: fail
                  message:
                    type: string
                    example: 'Invalid credentials'
                  data:
                    type: array
                    example: []
        429:
          description: 'Too many requests'
          content:
            application/json:
              schema:
                type: object
                example:
                  status: fail
                  message: 'Too many requests'
                  data: []
                properties:
                  status:
                    type: string
                    example: fail
                  message:
                    type: string
                    example: 'Too many requests'
                  data:
                    type: array
                    example: []
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Email user,'
                  example: ucupjago@gaming.yt
                password:
                  type: string
                  description: 'Password user,'
                  example: ucupgggaming
              required:
                - email
                - password
      security: []
  /api/v1/logout:
    post:
      summary: Logout
      operationId: logout
      description: "Endpoint ini digunakan untuk melakukan logout pengguna saat ini.\nIni akan mencabut token akses yang digunakan untuk otentikasi."
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Logout successful'
                  data: []
                properties:
                  message:
                    type: string
                    example: 'Logout successful'
                  data:
                    type: array
                    example: []
      tags:
        - Endpoints
  /api/v1/questions:
    get:
      summary: 'Get All Questions'
      operationId: getAllQuestions
      description: 'Endpoint untuk mengambil semua pertanyaan beserta jawabannya.'
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n  \"message\": \"Questions\",\n  \"data\": [\n    {\n      \"id\": 1,\n      \"question\": \"Sample Question 1\",\n      \"answer\": \"Sample Answer 1\"\n    },\n    {\n      \"id\": 2,\n      \"question\": \"Sample Question 2\",\n      \"answer\": \"Sample Answer 2\"\n    },\n    ...\n  ]\n }"
        404:
          description: 'Invalid Data'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Data not found'
                  data: null
                properties:
                  message:
                    type: string
                    example: 'Data not found'
                  data:
                    type: string
                    example: null
        500:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "scenario\n{\n  \"message\": \"Internal Server Error\",\n  \"data\": null\n}"
      tags:
        - Endpoints
  '/api/v1/question/{question_id}/answer/{answer_id}':
    post:
      summary: 'Answer Question'
      operationId: answerQuestion
      description: 'Endpoint untuk menyimpan jawaban untuk pertanyaan tertentu dan memperbarui hasil pengguna.'
      parameters: []
      responses:
        201:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n \"message\": \"Success Input Answer\",\n \"data\": [\n   {\n     \"id\": 1,\n     \"question\": \"Example\",\n     ...\n   },\n   {\n     \"id\": 1,\n     \"user_id\": 1,\n     \"tanggal_kuis\": \"2023-06-28 12:00:00\",\n     \"sifat1_score\": 2,\n     \"sifat2_score\": 3,\n     ...\n   }\n ]\n}"
        404:
          description: 'Invalid Answer'
          content:
            application/json:
              schema:
                type: object
                example:
                  status: fail
                  message: 'Answer not found'
                properties:
                  status:
                    type: string
                    example: fail
                  message:
                    type: string
                    example: 'Answer not found'
        500:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "scenario\n{\n \"status\": \"fail\",\n \"message\": \"An error occurred\"\n}"
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: question_id
        description: 'The ID of the question.'
        example: '1'
        required: true
        schema:
          type: string
      -
        in: path
        name: answer_id
        description: 'The ID of the answer.'
        example: '3'
        required: true
        schema:
          type: string
  /api/v1/result:
    get:
      summary: 'Get Result'
      operationId: getResult
      description: 'Endpoint untuk mengambil hasil jawaban yang terkait dengan pengguna yang diautentikasi.'
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n \"message\": \"Result Found\",\n \"data\": {\n     \"id\": 1,\n     \"user_id\": 1,\n     \"tanggal_kuis\": \"2023-06-28 12:00:00\",\n     \"sifat1_score\": 2,\n     \"sifat2_score\": 3,\n     ...\n }\n}"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  status: Fail
                  message: Unauthorized
                properties:
                  status:
                    type: string
                    example: Fail
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: 'Invalid Data'
          content:
            application/json:
              schema:
                type: object
                example:
                  status: Fail
                  message: 'Data not found'
                properties:
                  status:
                    type: string
                    example: Fail
                  message:
                    type: string
                    example: 'Data not found'
        500:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "scenario\n{\n \"status\": \"Fail\",\n \"message\": \"An error occurred\"\n}"
      tags:
        - Endpoints
tags:
  -
    name: Endpoints
    description: ''
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: 'You can retrieve your token by visiting your dashboard and clicking <b>Generate API token</b>.'
security:
  -
    default: []
